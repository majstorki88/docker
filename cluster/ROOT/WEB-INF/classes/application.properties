# DataSource settings: set here your own configurations for the database
# connection. In this example we have "netgloo_blog" as database name and
# "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/nemanja
spring.datasource.url = jdbc:mysql://localhost:3306/nemanja
#spring.datasource.username = root
#spring.datasource.password =
spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://ITTKAMYSQL15549.it.telekom.yu:3306/hidmet
spring.datasource.username = hidmet
spring.datasource.password = hidmet

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.resources.cache-period=0

#spring thymeleaf
spring.thymeleaf.cache = false

logging.level.org.springframework.ws=INFO
logging.level.org.springframework.ws.soap.server.endpoint.interceptor=DEBUG
#logging.level.org.springframework.web=DEBUG
logging.file=logs/logging.log
